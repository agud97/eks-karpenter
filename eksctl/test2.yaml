# A simple example of ClusterConfig object:
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: cluster-13
  region: eu-central-1 

vpc:
  id: "vpc-0ee4d4f5016e1d873"  # (optional, must match VPC ID used for each subnet below)
  cidr: "192.168.0.0/16"       # (optional, must match CIDR used by the given VPC)
  subnets:
    # must provide 'private' and/or 'public' subnets by availability zone as shown
    private:
      eu-central-1a:
        id: "subnet-0d36d85f112e32acd"
        cidr: "192.168.128.0/19"  # (optional, must match CIDR used by the given subnet)  
      eu-central-1b:
        id: "subnet-009789339291c271d"
        cidr: "192.168.160.0/19" # (optional, must match CIDR used by the given subnet
      eu-central-1c:
        id: "subnet-0daca39044bdd3388"
        cidr: "192.168.96.0/19"   # (optional, must match CIDR used by the given subnet)

iam:
  withOIDC: true

karpenter:
  version: 'v0.31.0' # Exact version must be provided
  createServiceAccount: true # default is false
  withSpotInterruptionQueue: true # adds all required policies and rules for supporting Spot Interruption Queue, default is false

managedNodeGroups:
  - name: ng-1
    taints:
      - key: CriticalAddonsOnly
        value: "true"
        effect: NoExecute
    instanceType: t2.small 
    availabilityZones: ["eu-central-1a", "eu-central-1b", "eu-central-1c"]
    minSize: 1
    maxSize: 2
    desiredCapacity: 2
    privateNetworking: true # if only 'Private' subnets are given, this must be enabled
 
